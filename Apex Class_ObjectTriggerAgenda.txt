/*
* Apex Class: ObjectTriggerAgenda
* Description: 
	- Central agenda for processes run via object trigger
* Created By: [Full Name]
* Created Date: [Date]
* Last Modified By: [Full Name]
* Last Modified: [Date]
*/

public with sharing class ObjectTriggerAgenda {
	
	public static Set<String> hasRunBefore = new Set<String>();
	public static Set<String> hasRunAfter = new Set<String>();

	public static void runAgenda(Boolean isBefore, Boolean isAfter, Boolean isInsert, Boolean isUpdate, Boolean isDelete, 
								List<sObject> newList, Map<Id,sObject> newMap, List<sObject> oldList, Map<Id,sObject> oldMap){

		//Load Object Shared Resources
		if(!hasRunBefore.contains('ObjectSharedResources') && !hasRunAfter.contains('ObjectSharedResources')){
			ObjectSharedResources.prepResources();
			hasRunBefore.add('ObjectSharedResources');
			hasRunAfter.add('ObjectSharedResources');
		}

		//Process 1
		if(isBefore && (isInsert || isUpdate) && !hasRunBefore.contains('Process1Class')){
			Process1Class.entryMethod(isBefore, isAfter, isInsert, isUpdate, isDelete, newList, newMap, oldList, oldMap);
			hasRunBefore.add('Process1Class');
		}
		if(isAfter && (isInsert || isUpdate) && !hasRunAfter.contains('Process1Class')){
			Process1Class.entryMethod(isBefore, isAfter, isInsert, isUpdate, isDelete, newList, newMap, oldList, oldMap);
			hasRunAfter.add('Process1Class');
		}

		//Process 2
		if(isBefore && (isInsert || isUpdate) && !hasRunBefore.contains('Process2Class')){
			Process2Class.entryMethod(isBefore, isAfter, isInsert, isUpdate, isDelete, newList, newMap, oldList, oldMap);
			hasRunBefore.add('Process2Class');
		}

		//Process 3
		if(isAfter && (isInsert || isUpdate) && !hasRunAfter.contains('Process3Class')){
			Process3Class.entryMethod(isBefore, isAfter, isInsert, isUpdate, isDelete, newList, newMap, oldList, oldMap);
			hasRunAfter.add('Process3Class');
		}

		//Template for additional processes (Leave commented in class for future reference)
		/*
		if(isBefore && (isInsert || isUpdate) && !hasRunBefore.contains('ClassName')){
			ClassName.entryMethod(isBefore, isAfter, isInsert, isUpdate, isDelete, newList, newMap, oldList, oldMap);
			hasRunBefore.add('ClassName');
		}
		if(isAfter && (isInsert || isUpdate) && !hasRunAfter.contains('ClassName')){
			ClassName.entryMethod(isBefore, isAfter, isInsert, isUpdate, isDelete, newList, newMap, oldList, oldMap);
			hasRunAfter.add('ClassName');
		}
		*/
	}
}